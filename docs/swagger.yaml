definitions:
  models.APIResponse:
    properties:
      data: {}
      error:
        type: string
      message:
        type: string
      success:
        type: boolean
    type: object
  models.CreateUserRequest:
    properties:
      age:
        example: 30
        maximum: 120
        minimum: 1
        type: integer
      email:
        example: john@example.com
        type: string
      name:
        example: John Doe
        type: string
    required:
    - email
    - name
    type: object
  models.UpdateUserRequest:
    properties:
      age:
        example: 35
        type: integer
      email:
        example: jane@example.com
        type: string
      name:
        example: Jane Doe
        type: string
    type: object
info:
  contact: {}
paths:
  /users:
    get:
      consumes:
      - application/json
      description: Retrieve a paginated list of users
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.APIResponse'
      summary: Get all users with pagination
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user with name and email
      parameters:
      - description: User creation request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.APIResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.APIResponse'
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user from the system by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.APIResponse'
      summary: Delete a user by ID
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Retrieve a user by their unique ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.APIResponse'
      summary: Get a user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a user's name or email by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User update request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.APIResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.APIResponse'
      summary: Update a user by ID
      tags:
      - users
swagger: "2.0"
